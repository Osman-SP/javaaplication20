package javaapplication20;

import javax.swing.DefaultComboBoxModel;

public class PanelUnir extends javax.swing.JPanel {
    private boolean isUpdatingComboBoxes = false;
    AFN afn = new AFN();
    
    public PanelUnir() {
        initComponents();
        
            // Listener para el primer ComboBox (jCB1)
        jCB1.addActionListener(e -> {
            // Si la bandera está levantada, significa que este evento fue
            // causado por el código, no por el usuario. Lo ignoramos.
            if (isUpdatingComboBoxes) {
                return;
            }

            try {
                // 1. Levantamos la bandera para evitar la reacción en cadena.
                isUpdatingComboBoxes = true;

                Object seleccionadoEn1 = jCB1.getSelectedItem();
                if (seleccionadoEn1 == null) return;

                Object seleccionActualCB2 = jCB2.getSelectedItem();

                DefaultComboBoxModel<String> modeloParaCB2 = new DefaultComboBoxModel<>();
                for (Integer id : AFN.afnC.keySet()) { // Asegúrate que el nombre del mapa sea el correcto
                    String idStr = id.toString();
                    if (!idStr.equals(seleccionadoEn1.toString())) {
                        modeloParaCB2.addElement(idStr);
                    }
                }
                jCB2.setModel(modeloParaCB2);
                if (seleccionActualCB2 != null && !seleccionActualCB2.equals(seleccionadoEn1)) {
                    jCB2.setSelectedItem(seleccionActualCB2);
                }

            } finally {
                // 2. Bajamos la bandera al final, pase lo que pase.
                isUpdatingComboBoxes = false;
            }
        });

        // Listener para el segundo ComboBox (jCB2)
        jCB2.addActionListener(e -> {
            // El mismo guardia aquí
            if (isUpdatingComboBoxes) {
                return;
            }

            try {
                // 1. Levantamos la bandera
                isUpdatingComboBoxes = true;

                Object seleccionadoEn2 = jCB2.getSelectedItem();
                if (seleccionadoEn2 == null) return;

                Object seleccionActualCB1 = jCB1.getSelectedItem();

                DefaultComboBoxModel<String> modeloParaCB1 = new DefaultComboBoxModel<>();
                for (Integer id : AFN.afnC.keySet()) { // Asegúrate que el nombre del mapa sea el correcto
                    String idStr = id.toString();
                    if (!idStr.equals(seleccionadoEn2.toString())) {
                        modeloParaCB1.addElement(idStr);
                    }
                }
                jCB1.setModel(modeloParaCB1);
                if (seleccionActualCB1 != null && !seleccionActualCB1.equals(seleccionadoEn2)) {
                    jCB1.setSelectedItem(seleccionActualCB1);
                }

            } finally {
                // 2. Bajamos la bandera
                isUpdatingComboBoxes = false;
            }
        });
    }

    public void inicializarComboBoxes() {
        DefaultComboBoxModel<String> modelo1 = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<String> modelo2 = new DefaultComboBoxModel<>();

        // Obtenemos todos los IDs disponibles
        for (Integer id : AFN.afnC.keySet()) {
            String idStr = id.toString();
            modelo1.addElement(idStr);
            modelo2.addElement(idStr);
        }

        // Asignamos un modelo a cada ComboBox
        jCB1.setModel(modelo1);
        jCB2.setModel(modelo2);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCB1 = new javax.swing.JComboBox<>();
        jCB2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(600, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("Unir:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Con:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, -1, -1));

        jCB1.setToolTipText("");
        jCB1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jCB1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB1ActionPerformed(evt);
            }
        });
        add(jCB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 100, -1));

        jCB2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        add(jCB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 100, -1));

        jButton1.setBackground(new java.awt.Color(255, 51, 102));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setText("Unir AFN's");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 120, -1));

        jPanel1.setBackground(new java.awt.Color(255, 51, 102));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("UNIR AFN'S");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel4)
                .addContainerGap(204, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 90));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/union.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 280, 160));
    }// </editor-fold>//GEN-END:initComponents

    private void jCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB1ActionPerformed
        
    }//GEN-LAST:event_jCB1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // --- 1. Obtener las selecciones de los ComboBox ---
            Object seleccionado1 = jCB1.getSelectedItem();
            Object seleccionado2 = jCB2.getSelectedItem();

            // --- 2. Validar las entradas ---
            if (seleccionado1 == null || seleccionado2 == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecciona dos AFN para unir.");
                return;
            }

            int id1 = Integer.parseInt(seleccionado1.toString());
            int id2 = Integer.parseInt(seleccionado2.toString());

            if (id1 == id2) {
                javax.swing.JOptionPane.showMessageDialog(this, "No puedes unir un AFN consigo mismo. Elige dos diferentes.");
                return;
            }

            // --- 3. Recuperar los AFNs del Mapa ---
            AFN afn1 = AFN.afnC.get(id1);
            AFN afn2 = AFN.afnC.get(id2);

            // --- 4. Realizar la Unión ---
            // afn1 se modifica internamente para contener la unión.
            afn1.UnirAFN(afn2);

            // --- 5. Eliminar el segundo AFN del mapa ---
            // La clave de tu lógica: el segundo autómata es "consumido" y se elimina.
            AFN.afnC.remove(id2);

            // El afn1 ya está actualizado en el mapa, no hay que volver a ponerlo.

            javax.swing.JOptionPane.showMessageDialog(this, "Unión exitosa. El AFN " + id2 + " se fusionó en el AFN " + id1 + ".");

            // --- 6. Actualizar los ComboBoxes ---
            // Es crucial actualizar la vista para que refleje la eliminación del id2.
            this.inicializarComboBoxes();

        } catch (Exception e) {
            // Capturamos cualquier error inesperado
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public static javax.swing.JComboBox<String> jCB1;
    public static javax.swing.JComboBox<String> jCB2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
