/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javaapplication20;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;
import java.util.Set;
import java.util.TreeSet; // Para ordenar el alfabeto
/**
 *
 * @author osman
 */
public class PanelConv extends javax.swing.JPanel {

    /**
     * Creates new form PanelConv
     */
    public PanelConv() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConvertir = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(600, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnConvertir.setBackground(new java.awt.Color(153, 102, 255));
        btnConvertir.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnConvertir.setForeground(new java.awt.Color(255, 255, 255));
        btnConvertir.setText("Convertir AFN a AFD");
        btnConvertir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });
        add(btnConvertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 180, 60));

        btnExportar.setBackground(new java.awt.Color(153, 102, 255));
        btnExportar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnExportar.setForeground(new java.awt.Color(255, 255, 255));
        btnExportar.setText("Exportar");
        btnExportar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        add(btnExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, 140, 40));

        jPanel1.setBackground(new java.awt.Color(153, 102, 255));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("AFN a AFD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 90));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hoja-de-calculo.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 256, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        try {
            // --- 1. OBTENER LA VENTANA PRINCIPAL Y EL GRAN AFN ---
            // 'this' se refiere a PanelConv. getWindowAncestor busca el JFrame que lo contiene.
            MiPanel ventanaPrincipal = (MiPanel) javax.swing.SwingUtilities.getWindowAncestor(this);

            // Obtenemos la referencia al gran AFN que guardamos antes.
            AFN granAFN = ventanaPrincipal.elGranAFN;

            // --- 2. VALIDAR QUE EL GRAN AFN EXISTA ---
            if (granAFN == null) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Error: No se ha creado el 'gran AFN' todavía.\n" +
                    "Por favor, une una colección de autómatas primero.", 
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // --- 3. ¡LLAMAR A LA FUNCIÓN DE CONVERSIÓN! ---
            // Como convertirAFD() es un método de instancia, lo llamamos sobre el objeto granAFN.
            AFD afdConvertido = granAFN.convertirAFD();

            // --- 4. GUARDAR EL RESULTADO ---
            // Guardamos el nuevo AFD en la variable de la ventana principal para uso futuro.
            ventanaPrincipal.elAFDfinal = afdConvertido;

            // --- 5. INFORMAR AL USUARIO ---
            javax.swing.JOptionPane.showMessageDialog(this, 
                "¡Conversión de AFN a AFD exitosa!\n\n" +
                "AFN original tenía: " + granAFN.estados.size() + " estados.\n" +
                "Nuevo AFD tiene: " + afdConvertido.edosAFD.length + " estados.", // Usamos .length porque es un arreglo
                "Conversión Completa", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado durante la conversión: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConvertirActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        // --- 1. OBTENER EL AFD FINAL ---
        MiPanel ventanaPrincipal = (MiPanel) javax.swing.SwingUtilities.getWindowAncestor(this);
        AFD afd = ventanaPrincipal.elAFDfinal;

        if (afd == null || afd.edosAFD == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay un AFD para exportar. Por favor, realiza la conversión primero.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // --- 2. MOSTRAR DIÁLOGO PARA GUARDAR ARCHIVO ---
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Archivo de AFD");

        int seleccion = fileChooser.showSaveDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivoParaGuardar = fileChooser.getSelectedFile();

            if (!archivoParaGuardar.getName().toLowerCase().endsWith(".txt")) {
                archivoParaGuardar = new File(archivoParaGuardar.getParentFile(), archivoParaGuardar.getName() + ".txt");
            }

            try {
                // --- 3. FORMATEAR LOS DATOS DEL AFD ---
                StringBuilder contenido = new StringBuilder();

                Set<Character> alfabetoOrdenado = new TreeSet<>(afd.alfabeto);

                // Escribimos los datos principales en las primeras líneas
                contenido.append(afd.edosAFD.length).append("\n"); // Número de Estados
                for (Character c : alfabetoOrdenado) {
                    contenido.append(c).append(" ");
                }
                contenido.append("\n");
                contenido.append("0\n"); // Estado Inicial

                contenido.append("\n"); // Dejamos una línea en blanco antes de la tabla

                // 3.1. Encabezado de la tabla
                contenido.append("\t"); // Espacio para la columna de estados
                for (Character c : alfabetoOrdenado) {
                    contenido.append(c).append("\t");
                }
                contenido.append("Edo. Acept\n");

                // 3.2. Contenido de la tabla
                for (EdoAFD estado : afd.edosAFD) {
                    // Columna 0: ID del Estado
                    contenido.append(estado.id).append("\t");

                    // Columnas del Alfabeto
                    for (Character c : alfabetoOrdenado) {
                        contenido.append(estado.transAFD[(int)c]).append("\t");
                    }

                    // Última Columna: Token de Aceptación
                    contenido.append(estado.token).append("\n");
                }

                // --- 4. ESCRIBIR EN EL ARCHIVO ---
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(archivoParaGuardar))) {
                    writer.write(contenido.toString());
                }

                javax.swing.JOptionPane.showMessageDialog(this, "AFD exportado exitosamente a:\n" + archivoParaGuardar.getAbsolutePath());

            } catch (IOException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error al escribir en el archivo: " + e.getMessage(), "Error de Archivo", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnExportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnExportar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
